// <auto-generated />
using System;
using FeedbackManager.DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedbackManager.DataAccessLayer.Migrations
{
    [DbContext(typeof(FeedbackManagerDbContext))]
    [Migration("20190316223231_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedbackManager.DataAccessLayer.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answers");

                    b.Property<string>("QuestionName");

                    b.Property<string>("ShortComment");

                    b.Property<int>("SurveyId");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Question");

                    b.HasData(
                        new { Id = 1, Answers = "Answer 1;Answer 2;Answer 3", QuestionName = "Question title 1", ShortComment = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", SurveyId = 1 },
                        new { Id = 2, Answers = "Answer 1;Answer 2", QuestionName = "Question title 2", ShortComment = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", SurveyId = 1 },
                        new { Id = 3, Answers = "Answer 1;Answer 2;Answer 3", QuestionName = "Question title 1", ShortComment = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur...", SurveyId = 2 }
                    );
                });

            modelBuilder.Entity("FeedbackManager.DataAccessLayer.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatorName");

                    b.Property<string>("Description");

                    b.Property<string>("SurveyName");

                    b.HasKey("Id");

                    b.ToTable("Survey");

                    b.HasData(
                        new { Id = 1, CreatedAt = new DateTime(2019, 3, 16, 22, 32, 31, 274, DateTimeKind.Utc), CreatorName = "Jose Moreno", Description = "Some text 1", SurveyName = "Survey1" },
                        new { Id = 2, CreatedAt = new DateTime(2019, 3, 16, 22, 32, 31, 274, DateTimeKind.Utc), CreatorName = "John Bleach", Description = "Some text 2", SurveyName = "Survey2" },
                        new { Id = 3, CreatedAt = new DateTime(2019, 3, 16, 22, 32, 31, 274, DateTimeKind.Utc), CreatorName = "Anna Rodriguez", Description = "Some text 3", SurveyName = "Survey3" }
                    );
                });

            modelBuilder.Entity("FeedbackManager.DataAccessLayer.Entities.Question", b =>
                {
                    b.HasOne("FeedbackManager.DataAccessLayer.Entities.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
